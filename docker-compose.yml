version: '3.9'
networks:
  local:
    name: local
services:
  react-ui:
    restart: unless-stopped
    build: 
      context: ../ui.react
      target: dev
      dockerfile: Dockerfile.dev
    image: ui-react-dev
    ports: 
      - 3100:3100
    volumes:
      - ../ui.react:/usr/src/app    
      - /usr/src/app/node_modules
    env_file:
      - envs/ui.env
    networks:
      - local
    depends_on:
      bff:
        condition: service_healthy
    healthcheck:
      test: curl --fail https://localhost:5001/health || exit 1
      interval: 10s
      timeout: 3s
      retries: 10
      start_period: 10s  
  bff:  
    restart: unless-stopped
    image: bff
    ports:
      - 3101:5290
    volumes:
      - ../bff/src/simple-budget.bff:/app/src
      - ./certs/https:/https
      - ./certs/ca:/usr/local/share/ca-certificates
      - /app/src/bin
      - /app/src/obj
    env_file:
      - envs/bff.env
    networks:
      - local
    depends_on:
      identity:
        condition: service_healthy
      api:
        condition: service_healthy   
      seq:
        condition: service_started
    healthcheck:
      test: curl --fail https://localhost:5290/health || exit 1
      interval: 10s
      timeout: 3s
      retries: 10
      start_period: 10s  
  api: 
    restart: unless-stopped
    image: api
    ports:
      - 3102:5036
    volumes:
      - ../api/src/simple-budget.api:/app/src
      - ./certs/https:/https
      - ./certs/ca:/usr/local/share/ca-certificates
      - /app/src/bin
      - /app/src/obj
    env_file:
      - envs/api.env      
    networks:
      - local
    depends_on:
      identity:
        condition: service_healthy
      api-db:
        condition: service_healthy   
      seq:
        condition: service_started
    healthcheck:
      test: curl --fail https://localhost:5036/health || exit 1
      interval: 10s
      timeout: 3s
      retries: 10
      start_period: 10s  
  identity: 
    restart: unless-stopped
    image: identity
    ports:
      - 3103:5001
    volumes:
      - ../identity/src/asg.identity:/app/src
      - ./certs/https:/https
      - ./certs/ca:/usr/local/share/ca-certificates
      - /app/src/bin
      - /app/src/obj
    env_file:
      - envs/identity.env
    networks:
      - local
    healthcheck:
      test: curl --fail https://localhost:5001/health || exit 1
      interval: 10s
      timeout: 3s
      retries: 10
      start_period: 10s  
    depends_on:    
      identity-db:
        condition: service_healthy      
      seq:
        condition: service_started
  seq:
    restart: unless-stopped
    image: datalust/seq
    volumes:
      - ./certs/https:/https
      - ./certs/ca:/usr/local/share/ca-certificates
      - ./seq:/seqinit
    env_file:
      - envs/seq.env
    ports:
      - 3104:443
      - 3105:45341
    networks:
      - local    
  identity-db:
    restart: unless-stopped
    image: mcr.microsoft.com/mssql/server:2022-latest
    ports:
      - 3106:1433
    env_file:
      - envs/mssql.env
    container_name: sqldb-identity
    hostname: sqldb-identity
    networks:
      - local
    healthcheck:
      test: /opt/mssql-tools/bin/sqlcmd -S localhost -U sa -P "$${MSSQL_SA_PASSWORD}" -Q "SELECT 1" -b -o /dev/null
      interval: 10s
      timeout: 3s
      retries: 10
      start_period: 10s  
  api-db:
    restart: unless-stopped
    image: mcr.microsoft.com/mssql/server:2022-latest
    ports:
      - 3107:1433
    env_file:
      - envs/mssql.env
    container_name: sqldb-api
    hostname: sqldb-api
    networks:
      - local
    healthcheck:
      test: /opt/mssql-tools/bin/sqlcmd -S localhost -U sa -P "$${MSSQL_SA_PASSWORD}" -Q "SELECT 1" -b -o /dev/null
      interval: 10s
      timeout: 3s
      retries: 10
      start_period: 10s  